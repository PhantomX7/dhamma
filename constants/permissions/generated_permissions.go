// Code generated by permgen; DO NOT EDIT.
package permissions

import (
	"github.com/PhantomX7/dhamma/entity"
)

const PermissionTypeApi = "API"
const PermissionTypeWeb = "WEB"

// ApiPermissions contains all API permissions generated from module definitions
var ApiPermissions = []entity.Permission{
	{
		Name:             "auth - me",
		Object:           "auth",
		Action:           "me",
		Description:      "Get the current user information",
		Type:             PermissionTypeApi,
		IsDomainSpecific: false,
	},
	{
		Name:             "auth - update-password",
		Object:           "auth",
		Action:           "update-password",
		Description:      "Update the current user's password",
		Type:             PermissionTypeApi,
		IsDomainSpecific: false,
	},
	{
		Name:             "permission - index",
		Object:           "permission",
		Action:           "index",
		Description:      "Index all permissions",
		Type:             PermissionTypeApi,
		IsDomainSpecific: false,
	},
	{
		Name:             "role - index",
		Object:           "role",
		Action:           "index",
		Description:      "Index all roles",
		Type:             PermissionTypeApi,
		IsDomainSpecific: false,
	},
	{
		Name:             "role - show",
		Object:           "role",
		Action:           "show",
		Description:      "View role details",
		Type:             PermissionTypeApi,
		IsDomainSpecific: false,
	},
	{
		Name:             "role - create",
		Object:           "role",
		Action:           "create",
		Description:      "Create a new role",
		Type:             PermissionTypeApi,
		IsDomainSpecific: false,
	},
	{
		Name:             "role - update",
		Object:           "role",
		Action:           "update",
		Description:      "Update role information",
		Type:             PermissionTypeApi,
		IsDomainSpecific: false,
	},
	{
		Name:             "role - add-permissions",
		Object:           "role",
		Action:           "add-permissions",
		Description:      "Add permissions to a role",
		Type:             PermissionTypeApi,
		IsDomainSpecific: false,
	},
	{
		Name:             "role - delete-permissions",
		Object:           "role",
		Action:           "delete-permissions",
		Description:      "Delete permissions from a role",
		Type:             PermissionTypeApi,
		IsDomainSpecific: false,
	},
	{
		Name:             "user - index",
		Object:           "user",
		Action:           "index",
		Description:      "List all users",
		Type:             PermissionTypeApi,
		IsDomainSpecific: false,
	},
	{
		Name:             "user - show",
		Object:           "user",
		Action:           "show",
		Description:      "View user details",
		Type:             PermissionTypeApi,
		IsDomainSpecific: false,
	},
	{
		Name:             "user - create",
		Object:           "user",
		Action:           "create",
		Description:      "Create a new user",
		Type:             PermissionTypeApi,
		IsDomainSpecific: false,
	},
	{
		Name:             "user - update",
		Object:           "user",
		Action:           "update",
		Description:      "Update user information",
		Type:             PermissionTypeApi,
		IsDomainSpecific: false,
	},
	{
		Name:             "user - assign-role",
		Object:           "user",
		Action:           "assign-role",
		Description:      "Assign a role to a user",
		Type:             PermissionTypeApi,
		IsDomainSpecific: false,
	},
	{
		Name:             "user - remove-role",
		Object:           "user",
		Action:           "remove-role",
		Description:      "Remove a role from a user",
		Type:             PermissionTypeApi,
		IsDomainSpecific: false,
	},
	{
		Name:             "user - force-logout",
		Object:           "user",
		Action:           "force-logout",
		Description:      "Force logout a user",
		Type:             PermissionTypeApi,
		IsDomainSpecific: false,
	},
}

// GetAllPermissionCodes returns all permission codes
func GetAllPermissionCodes() []string {
	codes := make([]string, len(ApiPermissions))
	for i, p := range ApiPermissions {
		codes[i] = p.Object + "/" + p.Action
	}
	return codes
}
